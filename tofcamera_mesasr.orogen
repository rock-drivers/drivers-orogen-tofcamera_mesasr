name "tofcamera_mesasr"
# Optionally declare the version number
# version "0.1"

import_types_from "base"
import_types_from "TOFScanTypes.hpp"
import_types_from "tofcamera_mesasr/SwissRangerTypes.hpp"

using_library "tofcamera_mesasr"
using_library "vizkit3d"

task_context "Task" do
   needs_configuration

  property('interface', 'std::string', 'ETHERNET').
	 doc ('Type of interface of the camera sensor. So far Swiss Ranger Cameras are available with USB or Ethernet interfaces for data connection. Possible values: USB, ETHERNET')

  property('ip_address', 'std::string', '192.168.1.34').
	 doc ('IP address used by the camera sensor. Property only valid for Ethernet type of interface.')

  property('acquisition_mode', 'std::string', '').
	 doc ('Acquisition mode, use bitwise OR operator to turn on multiple modes at the same time; possible values: AM_COR_FIX_PTRN, AM_MEDIAN, AM_TOGGLE_FRQ, AM_CONV_GRAY, AM_SW_ANF, AM_RESERVED0, AM_RESERVED1, AM_CONF_MAP, AM_HW_TRIGGER, AM_SW_TRIGGER, AM_DENOISE_ANF, AM_MEDIANCROSS')

  property('timeout', 'int', 3000).
	 doc ('Timeout in ms for reading and writing')

  property('integration_time', 'int', 255).
	 doc ('Integration time of the camera; [0,255]')

  property('dual_integration_time', 'int', 0).
   doc ('Dual integration time; only available for firmware 0x73; [0,100]')

  property('modulation_frequency', 'tofcamera_mesasr/TMS_ModulationFrq', :MF_15MHz).
	 doc('Modulation frequency of the LEDs; possible values: MF_40MHz, MF_30MHz, MF_21MHz, MF_20MHz, MF_19MHz, MF_60MHz, MF_15MHz, MF_10MHz, MF_29MHz, MF_31MHz, MF_14_5MHz, MF_15_5MHz')

  property('min_int_time', 'int', 255).
	 doc('Minimal integration time for auto exposure; if the value is 255, the auto exposure is turn off; [0,255]')

  property('max_int_time', 'int', 0).
	 doc('Maximal integration time for auto exposure')

  property('percent_over_pos', 'int', 0).
	 doc('Percent over position for auto exposure; [0,100]')

  property('desired_pos', 'int', 0).
	 doc('Desired position for auto exposure; [0,255]')

  property('amplitude_threshold', 'int', 0).
   doc ('The coordinate of points with lower amplitude than threshold will set to zero. [0, 65535]')

  property('confidence_threshold', 'int', 0).
   doc ('The coordinate of points with lower confidence than threshold will set to zero. [0, 65535]')

  property('remove_zero_points', 'bool', false).
   doc ('Remove the points with zero coordinates')   

  property('color_interval', 'int', 0).
   doc('Color the pointcloud. The interval is for color extension in the units of pointcloud. 
   If the value is 0, the color for pointcloud would be not set.')

  output_port('tofscan', 'tofcamera_mesasr::TOFScan').
    doc ('TOFScan contains distance, amplitude, confidence images (if it is available) and 3D points')

  output_port('pointcloud', 'base::samples::Pointcloud').
    doc ('The pointcloud of the scan')
  
  output_port("ir_frame", ro_ptr("/base/samples/frame/Frame")).
    doc("video image retrieved from Camera")

  output_port("distance_frame", ro_ptr("/base/samples/frame/Frame")).
    doc("video image retrieved from Camera")

   periodic(0.1)
end

